import qrcode
import telebot
from PIL import Image, ImageDraw, ImageFont
from io import BytesIO
import time

TOKEN = "8025483084:AAH_CgKKebA0UUi_mKEKzk82YenNSQ2Li4M"
bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞.")
    bot.register_next_step_handler(message, get_name)

def get_name(message):
    user_name = message.text.strip()
    bot.reply_to(message, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞:")
    bot.register_next_step_handler(message, get_course, user_name)

def get_course(message, user_name):
    course_name = message.text.strip()
    
    try:
        cert_image = generate_certificate(user_name, course_name)
        cert_image.seek(0)
        bot.send_photo(message.chat.id, cert_image, caption="üéì –í–∞—à —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≥–æ—Ç–æ–≤!")
    except Exception as e:
        bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        print(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞: {e}")

def generate_certificate(name, course):
    """–°–æ–∑–¥–∞–µ—Ç —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫—É—Ä—Å–∞"""
    
    width, height = 800, 600
    image = Image.new("RGB", (width, height), "white")
    draw = ImageDraw.Draw(image)

    # –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ —à—Ä–∏—Ñ—Ç—É (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π)
    font_path = "arial.ttf"  
    try:
        font_title = ImageFont.truetype(font_path, 40)
        font_text = ImageFont.truetype(font_path, 30)
    except IOError:
        raise Exception("–ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª —à—Ä–∏—Ñ—Ç–∞. –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å.")

    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
    draw.text((width//2 - 100, 50), "–°–ï–†–¢–ò–§–ò–ö–ê–¢", font=font_title, fill="black")
    draw.text((width//2 - 250, 150), "–ù–∞—Å—Ç–æ—è—â–∏–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç, —á—Ç–æ", font=font_text, fill="black")
    draw.text((width//2 - len(name) * 10, 200), name, font=font_text, fill="blue")
    draw.text((width//2 - 200, 250), "—É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–µ–ª(–∞) –∫—É—Ä—Å:", font=font_text, fill="black")
    draw.text((width//2 - len(course) * 10, 300), f"¬´{course}¬ª", font=font_text, fill="blue")

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥
    qr_data = "https://www.youtube.com/playlist?list=PLybQ_CYZqJceLU0QO1sT2MkEUz8chpzPV"
    qr = qrcode.make(qr_data)
    qr = qr.resize((150, 150))  
    image.paste(qr, (width//2 - 75, 400))

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±—É—Ñ–µ—Ä
    buffer = BytesIO()
    image.save(buffer, format="PNG")
    buffer.seek(0)
    return buffer

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç —Å–±–æ–µ–≤
while True:
    try:
        print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç...")
        bot.polling(none_stop=True, timeout=60, long_polling_timeout=60)
    except Exception as e:
        print(f"‚ö† –û—à–∏–±–∫–∞: {e}. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...")
        time.sleep(30)  
